import asyncio
import nest_asyncio
from aiogram import Bot, Dispatcher
from aiogram.types import Message
from aiogram.filters import Command
from dotenv import load_dotenv
import os
import logging
import multiprocessing

nest_asyncio.apply()  # Allow nested event loops

load_dotenv()
TOKEN = os.getenv("BOT_TOKEN")

bot = Bot(token=TOKEN)
dp = Dispatcher()

logging.basicConfig(level=logging.INFO)

@dp.message(Command("start"))
async def start_command(message: Message):
    await message.reply("–ü—Ä–∏–≤—ñ—Ç! –¶–µ —Ç–≤—ñ–π –±–æ—Ç –¥–ª—è —Ä–æ–∑–≤–∏—Ç–∫—É! üöÄ")

def run_bot():
    asyncio.run(dp.start_polling(bot))

if __name__ == "__main__":
    # –ó–∞–ø—É—Å–∫–∞—î–º–æ –±–æ—Ç–∞ –≤ –æ–∫—Ä–µ–º–æ–º—É –ø—Ä–æ—Ü–µ—Å—ñ
    bot_process = multiprocessing.Process(target=run_bot)
    bot_process.start()
    bot_process.join()  # –î–æ–∑–≤–æ–ª—è—î –≤–∏–∫–æ–Ω–∞—Ç–∏ —ñ–Ω—à—ñ –∑–∞–¥–∞—á—ñ –≤ Jupyter
